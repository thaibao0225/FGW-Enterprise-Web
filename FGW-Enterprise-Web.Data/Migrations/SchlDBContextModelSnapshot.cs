// <auto-generated />
using System;
using FGW_Enterprise_Web.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FGW_Enterprise_Web.Data.Migrations
{
    [DbContext(typeof(SchlDBContext))]
    partial class SchlDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("AppConfig");

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            Value = "This is Home Page FWG School"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            Value = "This is Keyword Page FWG School"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            Value = "This is description Page FWG School"
                        });
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Comment", b =>
                {
                    b.Property<string>("comment_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("comment_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("comment_DateUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("comment_User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("comment_Id");

                    b.HasIndex("comment_User");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Course", b =>
                {
                    b.Property<string>("course_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("course_Descrition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("course_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("course_Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Deadline", b =>
                {
                    b.Property<string>("dl_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dl_CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dl_CreateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dl_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dl_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dl_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dl_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dl_TimeDeadline")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("dl_Id");

                    b.ToTable("Deadline");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.DeadlineCate", b =>
                {
                    b.Property<string>("dlCate_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dlCate_CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dlCate_CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dlCate_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dlCate_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dlCate_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dlCate_Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("dlCate_Id");

                    b.ToTable("DeadlineCate");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Event", b =>
                {
                    b.Property<string>("event_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("event_CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("event_CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("event_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("event_Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("event_Id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Function", b =>
                {
                    b.Property<string>("func_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Functionfunc_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("func_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("func_ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("func_Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("func_Id");

                    b.HasIndex("Functionfunc_Id");

                    b.ToTable("Function");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Permision", b =>
                {
                    b.Property<string>("per_ActionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("per_FunctionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("per_RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("per_ActionId", "per_FunctionId", "per_RoleId");

                    b.HasIndex("per_FunctionId");

                    b.HasIndex("per_RoleId");

                    b.ToTable("Permision");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.RegisterComment", b =>
                {
                    b.Property<string>("rescmt_CmtId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("rescmt_FileId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("rescmt_CmtId", "rescmt_FileId");

                    b.HasIndex("rescmt_FileId");

                    b.ToTable("RegisterComment");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.RegisterDeadline", b =>
                {
                    b.Property<string>("rd_DeadineCate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("rd_DeadlineId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("rd_DeadineCate", "rd_DeadlineId");

                    b.HasIndex("rd_DeadlineId");

                    b.ToTable("RegisterDeadline");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.RegisterEvent", b =>
                {
                    b.Property<string>("resEvent_CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("resEvent_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("resEvent_DeadlineCate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("resEvent_EventId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("resEvent_CourseId", "resEvent_UserId", "resEvent_DeadlineCate", "resEvent_EventId");

                    b.HasIndex("resEvent_DeadlineCate");

                    b.HasIndex("resEvent_EventId");

                    b.HasIndex("resEvent_UserId");

                    b.ToTable("RegisterEvent");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Role", b =>
                {
                    b.Property<string>("role_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role_Descrpition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("role_Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.User", b =>
                {
                    b.Property<string>("user_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("user_DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("user_LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.UserAction", b =>
                {
                    b.Property<string>("action_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("action_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("action_Id");

                    b.ToTable("UserAction");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.UserFile", b =>
                {
                    b.Property<string>("file_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("file_CreateBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("file_CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("file_DateUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("file_DeadlineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("file_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_IsSelected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_file")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("file_Id");

                    b.HasIndex("file_DeadlineId");

                    b.ToTable("UserFile");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.UserRole", b =>
                {
                    b.Property<string>("ur_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ur_RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ur_UserId", "ur_RoleId");

                    b.HasIndex("ur_RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Comment", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.User", "UserC")
                        .WithMany("CommentU")
                        .HasForeignKey("comment_User");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Function", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Function", null)
                        .WithMany("FunctionsFun")
                        .HasForeignKey("Functionfunc_Id");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.Permision", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.UserAction", "UserAction")
                        .WithMany("Permision")
                        .HasForeignKey("per_ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Function", "Function")
                        .WithMany("Permision")
                        .HasForeignKey("per_FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Role", "Role")
                        .WithMany("Permision")
                        .HasForeignKey("per_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.RegisterComment", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Comment", "Comment")
                        .WithMany("RegisterComment")
                        .HasForeignKey("rescmt_CmtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.UserFile", "UserFile")
                        .WithMany("RegisterComment")
                        .HasForeignKey("rescmt_FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.RegisterDeadline", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.DeadlineCate", "DealineCate")
                        .WithMany("RegisterDeadline")
                        .HasForeignKey("rd_DeadineCate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Deadline", "Dealine")
                        .WithMany("RegisterDeadline")
                        .HasForeignKey("rd_DeadlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.RegisterEvent", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Course", "Course")
                        .WithMany("RegisterEvent")
                        .HasForeignKey("resEvent_CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.DeadlineCate", "DealineCate")
                        .WithMany("RegisterEvent")
                        .HasForeignKey("resEvent_DeadlineCate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Event", "Event")
                        .WithMany("RegisterEvent")
                        .HasForeignKey("resEvent_EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.User", "User")
                        .WithMany("RegisterEvent")
                        .HasForeignKey("resEvent_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.UserFile", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Deadline", "DeadlineF")
                        .WithMany("UserFileD")
                        .HasForeignKey("file_DeadlineId");
                });

            modelBuilder.Entity("FGW_Enterprise_Web.Data.Entities.UserRole", b =>
                {
                    b.HasOne("FGW_Enterprise_Web.Data.Entities.Role", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("ur_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FGW_Enterprise_Web.Data.Entities.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("ur_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
