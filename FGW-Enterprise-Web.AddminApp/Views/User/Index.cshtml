@using FGW_Enterprise_Web.ViewModels.Common;
@model PagedResult<FGW_Enterprise_Web.ViewModels.System.Users.UserVm>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts{ 
    <script>
        setTimeout(function () {
            $('#alertMessage').fadeOut('slow');
        }, 2000);
    </script>
}

<div class="container-fluid">
    <h1 class="mt-4">List of User</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="index.html">Home Page</a></li>
        <li class="breadcrumb-item active">List of User</li>
    </ol>
  
    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <a class="btn btn-success" asp-action="Create" asp-controller="User">Create New</a>
                </div>
                    <div class="col-md-6 col-xs-12">
                        <form asp-action="Index" method="get">
                            <div class="row">
                                <div class="col-md-9">
                                    <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                                </div>
                                <div class="col-md-3">
                                    <button type="submit" class="btn btn-primary">Find</button>
                                    <button type="reset" onclick="window.location.href='/User/Index'" class="btn btn-dark">Reset</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
    
    <div class="card-body">
       
        <div class="row">
            @if (ViewBag.SuccessMessage != null)
            {
                <div id="alertMessage" class="alert alert-dark" role="alert">
                    @ViewBag.SuccessMessage
                </div>
            }
        </div>
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>
                            Id
                        </th>
                        <th>
                            User Name
                        </th>
                        <th>
                            First Name
                        </th>
                        <th>
                            Last Name
                        </th>
                        <th>
                            Date of birth
                        </th>
                        <th>
                            Email
                        </th>
                        <th>
                            Role
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DoB)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                      
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })|
                            @Html.ActionLink("Assign", "RoleAssign", new { id = item.Id })|

                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
        @await Component.InvokeAsync("Pager", Model)
    </div>
</div>




